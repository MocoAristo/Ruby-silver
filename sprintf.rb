# sprintfの使い方

#記法
# rn                :表示を改行させます。
# %幅d              : 整数値を指定の桁数で右詰めにします。
# %-幅d             ：整数値を指定の桁数で左詰めにします。
# %+幅d             ：整数値を符号付きで表示します。
# %0幅d             : 整数値の余った空白をゼロで埋めます。
# %幅.小数点以下桁数f ：小数点以下の桁数を指定しています。
# %幅s              ：文字列を右詰めで表示します。
# %-幅s             ：文字列を左詰めで表示します。

# 数値を右詰めで指定します。
str = sprintf("%10d", 123)
p str #=> "       123"
# 数値を左詰めで指定します。
str = sprintf("%-10d", 123)
p str #=> "123       "
# 数値を符号付きで指定します。
str = sprintf("%+10d", 123)
p str #=> "       +123"
# 数値を右詰めで指定し、余った空白をゼロで埋めます。
str = sprintf("%010d", 123)
p str #=> "0000000123"
# 小数点以下の桁数を指定します。
str = sprintf("%10.3f", 123.4)
p str #=> "   123.400"


# 文字列を右詰めで指定します。
str = sprintf("%10s", "abc")
p str #=> "       abc"
# 文字列を左詰めで指定します。
str = sprintf("%-10s", "abc")
p str #=> "abc       "
# 複数の値を渡して指定することができます。
str = sprintf("%3d is not %3s", 123, "abc")
p str #=> "123 is not abc"

# 補足
# 1. #   : %#b,%#B(2進数表現)、%#o(8進数表現)、%#x,%#X(16進数表現)についてリテラル表現と同じプレフィックス(0b,0B,0,0x,0X)を出力
# 2. -   : 幅を指定した場合に出力を左寄せする
# 3. +   : 「+」か「-」の符号を出力する
# 4. 空白 : 負の数の時のみ符号「-」を出力する
# 5. 0   : 最小幅を指定する際に余った桁を空白ではなく「0」で埋める

irb(main):003:0> sprintf('%d', 7)
#=> "7"
irb(main):004:0> sprintf('%#d', 7)
#=> "7"
irb(main):005:0> sprintf('%-d', 7)
#=> "7"
irb(main):006:0> sprintf('%+d', 7)
#=> "+7"
irb(main):007:0> sprintf('% d', 7)
#=> " 7"
irb(main):008:0> sprintf('%03d', 7)
#=> "007"
irb(main):008:0> sprintf('%#x', 15)
#=> "0xf"